# Generated by Django 5.2.4 on 2025-07-31 16:50

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('template_type', models.CharField(choices=[('booking_confirmation', 'Booking Confirmation'), ('payment_confirmation', 'Payment Confirmation'), ('booking_cancellation', 'Booking Cancellation'), ('tour_reminder_24h', '24 Hour Tour Reminder'), ('tour_reminder_2h', '2 Hour Tour Reminder'), ('payment_reminder', 'Payment Reminder'), ('refund_notification', 'Refund Notification'), ('guide_assignment', 'Guide Assignment'), ('tour_update', 'Tour Update')], max_length=30)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('both', 'Email & SMS')], default='email', max_length=10)),
                ('email_subject', models.CharField(blank=True, max_length=255)),
                ('email_body_html', models.TextField(blank=True, help_text='HTML email template')),
                ('email_body_text', models.TextField(blank=True, help_text='Plain text email template')),
                ('sms_message', models.TextField(blank=True, help_text='SMS template (max 160 chars)', max_length=160)),
                ('available_variables', models.TextField(blank=True, help_text='Available template variables (e.g., {{booking_id}}, {{tour_name}}, {{user_name}})')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_booking_confirmations', models.BooleanField(default=True)),
                ('email_payment_confirmations', models.BooleanField(default=True)),
                ('email_tour_reminders', models.BooleanField(default=True)),
                ('email_marketing', models.BooleanField(default=False)),
                ('sms_booking_confirmations', models.BooleanField(default=False)),
                ('sms_payment_confirmations', models.BooleanField(default=False)),
                ('sms_tour_reminders', models.BooleanField(default=True)),
                ('sms_marketing', models.BooleanField(default=False)),
                ('reminder_24h_before', models.BooleanField(default=True)),
                ('reminder_2h_before', models.BooleanField(default=True)),
                ('preferred_email', models.EmailField(blank=True, help_text="Override user's default email", max_length=254)),
                ('preferred_phone', models.CharField(blank=True, help_text='Phone for SMS notifications', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('recipient_email', models.EmailField(blank=True, max_length=254)),
                ('recipient_phone', models.CharField(blank=True, max_length=20)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('related_booking_id', models.UUIDField(blank=True, help_text='Related booking UUID', null=True)),
                ('related_payment_id', models.UUIDField(blank=True, help_text='Related payment UUID', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20)),
                ('priority', models.IntegerField(default=5, help_text='1=High, 5=Normal, 10=Low')),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('provider_message_id', models.CharField(blank=True, max_length=255)),
                ('provider_response', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='communications.notificationtemplate')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'scheduled_at'], name='communicati_status_5ff587_idx'), models.Index(fields=['recipient_user', 'channel'], name='communicati_recipie_33fcf6_idx'), models.Index(fields=['related_booking_id'], name='communicati_related_604750_idx')],
            },
        ),
    ]
